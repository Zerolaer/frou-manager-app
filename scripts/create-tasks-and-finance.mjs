#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js'

// Supabase –¥–∞–Ω–Ω—ã–µ
const supabaseUrl = 'https://anugfsevzdpsehfzflji.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFudWdmc2V2emRwc2VoZnpmbGppIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3OTM4NDEsImV4cCI6MjA3MTM2OTg0MX0.1-UpIU59Xp8T93Gcp5TpIOXJVSm2ANdTvEm69uD1ciw'

const supabase = createClient(supabaseUrl, supabaseKey)

console.log('üöÄ –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...')

async function createTasksAndFinance() {
  try {
    // –í—Ö–æ–¥–∏–º –∫–∞–∫ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    console.log('üîê –í—Ö–æ–¥–∏–º –∫–∞–∫ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å...')
    const { data: signInData, error: signInError } = await supabase.auth.signInWithPassword({
      email: 'demo@frovo.com',
      password: 'demo123456'
    })
    
    if (signInError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', signInError.message)
      return
    }
    
    console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!')
    const userId = signInData.user.id
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ–µ–∫—Ç—ã
    const { data: projects } = await supabase
      .from('projects')
      .select('*')
    
    const projectMap = {}
    projects?.forEach(project => {
      projectMap[project.name] = project.id
    })
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏
    console.log('\n‚úÖ –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏...')
    const tasks = [
      {
        title: '–°–æ–∑–¥–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∏–∑–∞–π–Ω –∏ –≤–µ—Ä—Å—Ç–∫—É –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–∞–π—Ç–∞',
        priority: 'high',
        project_id: projectMap['–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞'],
        date: '2024-01-15',
        completed: false,
        user_id: userId
      },
      {
        title: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö',
        description: '–°–æ–∑–¥–∞—Ç—å —Å—Ö–µ–º—É –ë–î –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ',
        priority: 'high',
        project_id: projectMap['–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞'],
        date: '2024-01-16',
        completed: true,
        user_id: userId
      },
      {
        title: '–°–æ–∑–¥–∞—Ç—å –ª–æ–≥–æ—Ç–∏–ø',
        description: '–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ª–æ–≥–æ—Ç–∏–ø –¥–ª—è –Ω–æ–≤–æ–≥–æ –±—Ä–µ–Ω–¥–∞',
        priority: 'medium',
        project_id: projectMap['–î–∏–∑–∞–π–Ω'],
        date: '2024-01-17',
        completed: false,
        user_id: userId
      },
      {
        title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤',
        description: '–ü—Ä–æ–≤–µ—Å—Ç–∏ –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤ –≤ –Ω–∏—à–µ',
        priority: 'low',
        project_id: projectMap['–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥'],
        date: '2024-01-18',
        completed: false,
        user_id: userId
      },
      {
        title: '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        description: '–ü—Ä–æ–≤–µ—Å—Ç–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        priority: 'medium',
        project_id: projectMap['–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è'],
        date: '2024-01-19',
        completed: false,
        user_id: userId
      }
    ]
    
    const { data: tasksData, error: tasksError } = await supabase
      .from('tasks')
      .insert(tasks)
      .select()
    
    if (tasksError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á:', tasksError.message)
    } else {
      console.log('‚úÖ –ó–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–Ω—ã:', tasksData.length)
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const { data: financeCats } = await supabase
      .from('finance_categories')
      .select('*')
    
    const categoryMap = {}
    financeCats?.forEach(cat => {
      categoryMap[cat.name] = cat.id
    })
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('\nüìä –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...')
    const financeData = [
      { 
        category_id: categoryMap['–ó–∞—Ä–ø–ª–∞—Ç–∞'], 
        values: [5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000],
        user_id: userId
      },
      { 
        category_id: categoryMap['–§—Ä–∏–ª–∞–Ω—Å'], 
        values: [1200, 800, 1500, 900, 1100, 1300, 700, 1600, 1000, 1400, 800, 1200],
        user_id: userId
      },
      { 
        category_id: categoryMap['–ü—Ä–æ–¥—É–∫—Ç—ã'], 
        values: [800, 750, 900, 850, 820, 880, 780, 920, 800, 860, 740, 890],
        user_id: userId
      },
      { 
        category_id: categoryMap['–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç'], 
        values: [200, 180, 220, 190, 210, 230, 170, 240, 200, 220, 180, 210],
        user_id: userId
      },
      { 
        category_id: categoryMap['–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è'], 
        values: [300, 250, 400, 350, 320, 380, 280, 420, 300, 360, 240, 390],
        user_id: userId
      }
    ]
    
    const { data: financeDataResult, error: financeDataError } = await supabase
      .from('finance_data')
      .insert(financeData)
      .select()
    
    if (financeDataError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', financeDataError.message)
    } else {
      console.log('‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã:', financeDataResult.length)
    }
    
    console.log('\nüéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã!')
    console.log('\nüìä –ò—Ç–æ–≥–æ:')
    console.log(`   üìÅ –ü—Ä–æ–µ–∫—Ç—ã: ${projects?.length || 0}`)
    console.log(`   ‚úÖ –ó–∞–¥–∞—á–∏: ${tasksData?.length || 0}`)
    console.log(`   üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${financeCats?.length || 0}`)
    console.log(`   üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ: ${financeDataResult?.length || 0}`)
    
    console.log('\nüåê –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:5174')
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  }
}

createTasksAndFinance()

