import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://anugfsevzdpsehfzflji.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFudWdmc2V2emRwc2VoZnpmbGppIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3OTM4NDEsImV4cCI6MjA3MTM2OTg0MX0.1-UpIU59Xp8T93Gcp5TpIOXJVSm2ANdTvEm69uD1ciw'

const supabase = createClient(supabaseUrl, supabaseKey)

async function createUserAndData() {
  try {
    console.log('üîê –°–æ–∑–¥–∞–µ–º –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    
    // –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    const { data: authData, error: authError } = await supabase.auth.signUp({
      email: 'demo@frovo.com',
      password: 'demo123'
    })
    
    if (authError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authError.message)
      return
    }
    
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω!')
    console.log('üë§ User ID:', authData.user.id)
    
    const userId = authData.user.id
    
    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º email —á–µ—Ä–µ–∑ SQL
    console.log('üìß –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º email...')
    const { error: confirmError } = await supabase.rpc('confirm_user_email', {
      user_email: 'demo@frovo.com'
    })
    
    if (confirmError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å email –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º...')
    } else {
      console.log('‚úÖ Email –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω!')
    }
    
    // –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    console.log('üìÅ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã...')
    const projects = [
      {
        name: '–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        color: '#3B82F6',
        user_id: userId
      },
      {
        name: '–ú–æ–±–∏–ª—å–Ω—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        color: '#10B981',
        user_id: userId
      },
      {
        name: '–î–∏–∑–∞–π–Ω',
        color: '#F59E0B',
        user_id: userId
      },
      {
        name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
        color: '#EF4444',
        user_id: userId
      }
    ]
    
    const { data: projectsData, error: projectsError } = await supabase
      .from('projects')
      .insert(projects)
      .select()
    
    if (projectsError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤:', projectsError.message)
    } else {
      console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç—ã —Å–æ–∑–¥–∞–Ω—ã:', projectsData.length)
    }
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏
    console.log('üìÇ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏...')
    const folders = [
      {
        name: '–ü—Ä–æ–µ–∫—Ç—ã',
        color: '#3B82F6',
        user_id: userId
      },
      {
        name: '–ü–ª–∞–Ω—ã',
        color: '#10B981',
        user_id: userId
      },
      {
        name: '–û–±—É—á–µ–Ω–∏–µ',
        color: '#F59E0B',
        user_id: userId
      },
      {
        name: '–°–æ–±—ã—Ç–∏—è',
        color: '#EF4444',
        user_id: userId
      },
      {
        name: '–õ–∏—á–Ω–æ–µ',
        color: '#8B5CF6',
        user_id: userId
      }
    ]
    
    const { data: foldersData, error: foldersError } = await supabase
      .from('folders')
      .insert(folders)
      .select()
    
    if (foldersError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–æ–∫:', foldersError.message)
    } else {
      console.log('‚úÖ –ü–∞–ø–∫–∏ —Å–æ–∑–¥–∞–Ω—ã:', foldersData.length)
    }
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏
    console.log('üìù –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏...')
    const tasks = [
      {
        title: '–ò–∑—É—á–∏—Ç—å React Hooks',
        description: '–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ö—É–∫–∏ React: useState, useEffect, useContext',
        completed: false,
        priority: 'high',
        project_id: projectsData[0].id,
        date: '2024-01-15',
        user_id: userId
      },
      {
        title: '–°–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
        description: '–°–æ–∑–¥–∞—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
        completed: false,
        priority: 'medium',
        project_id: projectsData[0].id,
        date: '2024-01-16',
        user_id: userId
      },
      {
        title: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å TypeScript',
        description: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞',
        completed: true,
        priority: 'low',
        project_id: projectsData[0].id,
        date: '2024-01-14',
        user_id: userId
      }
    ]
    
    const { data: tasksData, error: tasksError } = await supabase
      .from('tasks')
      .insert(tasks)
      .select()
    
    if (tasksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á:', tasksError.message)
      console.log('üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', tasksError)
    } else {
      console.log('‚úÖ –ó–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–Ω—ã:', tasksData.length)
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    console.log('üí∞ –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏...')
    const categories = [
      {
        name: '–ó–∞—Ä–ø–ª–∞—Ç–∞',
        type: 'income',
        user_id: userId
      },
      {
        name: '–§—Ä–∏–ª–∞–Ω—Å',
        type: 'income',
        user_id: userId
      },
      {
        name: '–ü—Ä–æ–¥—É–∫—Ç—ã',
        type: 'expense',
        user_id: userId
      },
      {
        name: '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
        type: 'expense',
        user_id: userId
      },
      {
        name: '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è',
        type: 'expense',
        user_id: userId
      }
    ]
    
    const { data: categoriesData, error: categoriesError } = await supabase
      .from('finance_categories')
      .insert(categories)
      .select()
    
    if (categoriesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:', categoriesError.message)
    } else {
      console.log('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã:', categoriesData.length)
    }
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('üìä –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...')
    const financeData = [
      {
        category_id: categoriesData[0].id,
        values: [1000, 1200, 800, 1500, 900],
        user_id: userId
      }
    ]
    
    const { data: financeDataResult, error: financeError } = await supabase
      .from('finance_data')
      .insert(financeData)
      .select()
    
    if (financeError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', financeError.message)
      console.log('üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', financeError)
    } else {
      console.log('‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã:', financeDataResult.length)
    }
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–º–µ—Ç–∫–∏
    console.log('üìù –°–æ–∑–¥–∞–µ–º –∑–∞–º–µ—Ç–∫–∏...')
    const notes = [
      {
        title: '–ò–¥–µ–∏ –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞',
        content: '–°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏ —Å –∫—Ä–∞—Å–∏–≤—ã–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º',
        folder_id: foldersData[0].id,
        pinned: true,
        user_id: userId
      },
      {
        title: '–ò–∑—É—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π',
        content: '–ò–∑—É—á–∏—Ç—å Next.js 14, Tailwind CSS, –∏ Supabase –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
        folder_id: foldersData[2].id,
        pinned: true,
        user_id: userId
      },
      {
        title: '–ü–ª–∞–Ω—ã –Ω–∞ –Ω–µ–¥–µ–ª—é',
        content: '1. –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ–µ–∫—Ç\n2. –ò–∑—É—á–∏—Ç—å –Ω–æ–≤—É—é —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é\n3. –í—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å –∫–æ–º–∞–Ω–¥–æ–π',
        folder_id: foldersData[1].id,
        pinned: false,
        user_id: userId
      },
      {
        title: '–í—Å—Ç—Ä–µ—á–∏ –∏ —Å–æ–±—ã—Ç–∏—è',
        content: '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: –í—Å—Ç—Ä–µ—á–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º\n–°—Ä–µ–¥–∞: –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞\n–ü—è—Ç–Ω–∏—Ü–∞: –ö–æ–º–∞–Ω–¥–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞',
        folder_id: foldersData[3].id,
        pinned: false,
        user_id: userId
      }
    ]
    
    const { data: notesData, error: notesError } = await supabase
      .from('notes')
      .insert(notes)
      .select()
    
    if (notesError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫:', notesError.message)
    } else {
      console.log('‚úÖ –ó–∞–º–µ—Ç–∫–∏ —Å–æ–∑–¥–∞–Ω—ã:', notesData.length)
    }
    
    console.log('üéâ –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
    console.log('üìä –ò—Ç–æ–≥–æ:')
    console.log('  üìÅ –ü—Ä–æ–µ–∫—Ç—ã:', projectsData?.length || 0)
    console.log('  üìÇ –ü–∞–ø–∫–∏:', foldersData?.length || 0)
    console.log('  ‚úÖ –ó–∞–¥–∞—á–∏:', tasksData?.length || 0)
    console.log('  üìù –ó–∞–º–µ—Ç–∫–∏:', notesData?.length || 0)
    console.log('  üí∞ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏:', categoriesData?.length || 0)
    console.log('  üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:', financeDataResult?.length || 0)
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message)
  }
}

createUserAndData()

