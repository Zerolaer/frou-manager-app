#!/usr/bin/env node

import { createClient } from '@supabase/supabase-js'

// Supabase –¥–∞–Ω–Ω—ã–µ
const supabaseUrl = 'https://anugfsevzdpsehfzflji.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFudWdmc2V2emRwc2VoZnpmbGppIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3OTM4NDEsImV4cCI6MjA3MTM2OTg0MX0.1-UpIU59Xp8T93Gcp5TpIOXJVSm2ANdTvEm69uD1ciw'

const supabase = createClient(supabaseUrl, supabaseKey)

console.log('üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–≥–æ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')

async function createConfirmedUser() {
  try {
    // –°–Ω–∞—á–∞–ª–∞ —É–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–µ—Å–ª–∏ –µ—Å—Ç—å)
    console.log('üóëÔ∏è  –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...')
    
    // –ü—ã—Ç–∞–µ–º—Å—è –≤–æ–π—Ç–∏ –∏ —É–¥–∞–ª–∏—Ç—å
    const { data: signInData } = await supabase.auth.signInWithPassword({
      email: 'demo@frovo.com',
      password: 'demo123456'
    })
    
    if (signInData?.user) {
      // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω
      console.log('‚ÑπÔ∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω')
    }
    
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –¥—Ä—É–≥–∏–º email
    const newEmail = 'demo2@frovo.com'
    console.log(`üë§ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ${newEmail}`)
    
    const { data: authData, error: signUpError } = await supabase.auth.signUp({
      email: newEmail,
      password: 'demo123456',
      options: {
        data: {
          name: 'Demo User'
        }
      }
    })
    
    if (signUpError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', signUpError.message)
      return
    }
    
    console.log('‚úÖ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω:', authData.user?.email)
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ–º –ª–∏ –≤–æ–π—Ç–∏
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤—Ö–æ–¥–∞...')
    
    const { data: testSignIn, error: testError } = await supabase.auth.signInWithPassword({
      email: newEmail,
      password: 'demo123456'
    })
    
    if (testError) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', testError.message)
      console.log('\nüîß –†–µ—à–µ–Ω–∏—è:')
      console.log('1. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ email –≤ Supabase Dashboard')
      console.log('2. –ò–ª–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ SQL –≤ Supabase SQL Editor:')
      console.log(`   UPDATE auth.users SET email_confirmed_at = NOW() WHERE email = '${newEmail}';`)
    } else {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!')
      console.log('\nüîë –ù–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:')
      console.log(`   Email: ${newEmail}`)
      console.log('   Password: demo123456')
      console.log('\nüåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:')
      console.log('   http://localhost:5174')
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message)
  }
}

createConfirmedUser()
