import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://anugfsevzdpsehfzflji.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImFudWdmc2V2emRwc2VoZnpmbGppIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTU3OTM4NDEsImV4cCI6MjA3MTM2OTg0MX0.1-UpIU59Xp8T93Gcp5TpIOXJVSm2ANdTvEm69uD1ciw'

const supabase = createClient(supabaseUrl, supabaseKey)

async function createData() {
  try {
    console.log('üîê –í—Ö–æ–¥–∏–º –∫–∞–∫ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å...')
    
    // –í—Ö–æ–¥–∏–º –∫–∞–∫ –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: 'demo@frovo.com',
      password: 'demo123'
    })
    
    if (authError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', authError.message)
      return
    }
    
    console.log('‚úÖ –í—Ö–æ–¥ —É—Å–ø–µ—à–µ–Ω!')
    console.log('üë§ User ID:', authData.user.id)
    
    const userId = authData.user.id
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–µ–∫—Ç—ã
    const { data: projects } = await supabase
      .from('projects')
      .select('id')
      .eq('user_id', userId)
    
    if (!projects || projects.length === 0) {
      console.log('‚ùå –ù–µ—Ç –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á')
      return
    }
    
    const projectId = projects[0].id
    
    // –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏
    console.log('üìù –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏...')
    const tasks = [
      {
        title: '–ò–∑—É—á–∏—Ç—å React Hooks',
        description: '–ò–∑—É—á–∏—Ç—å –æ—Å–Ω–æ–≤–Ω—ã–µ —Ö—É–∫–∏ React: useState, useEffect, useContext',
        completed: false,
        priority: 'high',
        project_id: projectId,
        date: '2024-01-15',
        user_id: userId
      },
      {
        title: '–°–æ–∑–¥–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏',
        description: '–°–æ–∑–¥–∞—Ç—å –∞–¥–∞–ø—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤',
        completed: false,
        priority: 'medium',
        project_id: projectId,
        date: '2024-01-16',
        user_id: userId
      },
      {
        title: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å TypeScript',
        description: '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞',
        completed: true,
        priority: 'low',
        project_id: projectId,
        date: '2024-01-14',
        user_id: userId
      }
    ]
    
    const { data: tasksData, error: tasksError } = await supabase
      .from('tasks')
      .insert(tasks)
      .select()
    
    if (tasksError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á:', tasksError.message)
      console.log('üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', tasksError)
    } else {
      console.log('‚úÖ –ó–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–Ω—ã:', tasksData.length)
    }
    
    // –ü–æ–ª—É—á–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    const { data: categories } = await supabase
      .from('finance_categories')
      .select('id')
      .eq('user_id', userId)
    
    if (!categories || categories.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö')
      return
    }
    
    const categoryId = categories[0].id
    
    // –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('üí∞ –°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ...')
    const financeData = [
      {
        category_id: categoryId,
        values: [1000, 1200, 800, 1500, 900],
        user_id: userId
      }
    ]
    
    const { data: financeDataResult, error: financeError } = await supabase
      .from('finance_data')
      .insert(financeData)
      .select()
    
    if (financeError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:', financeError.message)
      console.log('üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', financeError)
    } else {
      console.log('‚úÖ –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã:', financeDataResult.length)
    }
    
    console.log('üéâ –î–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!')
    
  } catch (error) {
    console.error('‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:', error.message)
  }
}

createData()

